#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newClientAcceptRef ${nuklei:newReferenceId()} # external scope
property newServerConnectRef ${newClientAcceptRef} # external scope

property serverConnect "nukleus://target/streams/http#source"
property serverInitialWindow 8192

accept ${serverConnect}
       option nukleus:route ${newServerConnectRef}
       option nukleus:transmission "duplex"
accepted

read nukleus:begin.ext ${http:headers()
                             .item(":scheme", "http")
                             .item(":method", "GET")
                             .item(":path", "/")
                             .item(":authority", "localhost:8080")
                             .item("upgrade", "WebSocket")
                             .item("connection", "upgrade")
                             .build()}

write nukleus:begin.ext ${http:headers()
                              .item(":status", "101")
                              .item("upgrade", "WebSocket")
                              .build()}

connected

write "data from server 1"
write flush
write "data from server 2"
write flush
write "data from server 3"
write flush

read "data from client 1"
read "data from client 2"
read "data from client 3"

